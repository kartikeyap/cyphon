# -*- coding: utf-8 -*-
# Copyright 2017-2018 Dunbar Security Solutions, Inc.
#
# This file is part of Cyphon Engine.
#
# Cyphon Engine is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# Cyphon Engine is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.
#
# Generated by Django 1.10.1 on 2017-03-20 16:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('locations', '0001_initial'),
        ('reservoirs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReservoirQueryParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('included_keywords', models.CharField(blank=True, max_length=255, verbose_name='Contains at least one of the keywords')),
                ('excluded_keywords', models.CharField(blank=True, max_length=255, verbose_name='Does not contain the keywords')),
                ('trm_loc_logic', models.CharField(choices=[('AND', 'satisfy both keyword and location conditions'), ('OR', 'satisfy either keyword or location conditions')], default='AND', max_length=5, verbose_name='Query type')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locations', models.ManyToManyField(blank=True, to='locations.Location')),
                ('reservoirs', models.ManyToManyField(to='reservoirs.Reservoir')),
            ],
        ),
    ]

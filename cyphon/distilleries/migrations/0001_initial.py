# -*- coding: utf-8 -*-
# Copyright 2017-2018 Dunbar Security Solutions, Inc.
#
# This file is part of Cyphon Engine.
#
# Cyphon Engine is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# Cyphon Engine is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.
#
# Generated by Django 1.10.1 on 2017-03-20 16:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('containers', '0001_initial'),
        ('warehouses', '0001_initial'),
        ('companies', '0001_initial'),
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Distillery',
            fields=[
                ('collection', models.OneToOneField(help_text='Storage location', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='warehouses.Collection')),
                ('is_shell', models.BooleanField(default=False, help_text='A "shell" models and retrieves data, but is not responsible for saving data.')),
                ('categories', models.ManyToManyField(blank=True, help_text='Employ Watchdogs with these Categories.', related_name='distilleries', related_query_name='distillery', to='categories.Category')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('container', models.ForeignKey(help_text='Data model', on_delete=django.db.models.deletion.CASCADE, related_name='distilleries', related_query_name='distillery', to='containers.Container')),
            ],
            options={
                'verbose_name_plural': 'distilleries',
                'ordering': ['name'],
            },
        ),
    ]
